<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.amwell.mapper.simcompany.SimCompanyMapper">

    <resultMap id="BaseResultMap" type="com.amwell.model.simcompany.SimCompany">
	    <id column="id" jdbcType="INTEGER" property="id" />
	    <id column="fullName" jdbcType="VARCHAR" property="fullName" />
	    <id column="shortName" jdbcType="VARCHAR" property="shortName" />
	    <id column="adminType" jdbcType="INTEGER" property="adminType" />
	    <id column="createTime" jdbcType="DATE" property="createTime" />
	    <id column="lastUpdateTime" jdbcType="DATE" property="lastUpdateTime" />
	    <id column="version" jdbcType="BIGINT" property="version" />
	    <id column="parentId" jdbcType="INTEGER" property="parentId" />
	    <id column="flag" jdbcType="INTEGER" property="flag" />
  </resultMap>
  
  <select id="isExisten"  resultType="Integer" >
  		select COUNT(1) from sim_company
  		<where>
	  		<choose>
	  			<when test="col == 'fullName'">
	  				and fullName = #{val}
	  			</when>
	  			<when test="col == 'shortName'">
	  				and shortName = #{val}
	  			</when>
	  			<when test="col == 'adminLoginName'">
	  				and adminLoginName = #{val}
	  			</when>
	  			<otherwise>
	  				and 1=2
	  			</otherwise>
	  		</choose>
	  		<if test="id != null">
	  			and id != #{id}
	  		</if>
  		</where>
  </select>
  
  <select id="querySimCompany" parameterType="com.amwell.model.simcompany.SimCompanyQuery" resultType="com.amwell.model.simcompany.SimCompany">
  		select 
  			a.fullName,a.shortName,a.adminType,DATE_FORMAT(a.createTime,'%Y-%m-%d') as createTime_s,DATE_FORMAT(a.lastUpdateTime,'%Y-%m-%d')as lastUpdateTime_s,a.parentId,a.flag,a.id,
  			c.username,c.realname,c.id as userid
  		from sim_company a
  		left join `user` c on c.simcompanyId = a.id	
  		<include refid="qw"></include>
  </select>
  
  <select id="queryById" parameterType="int" resultType="com.amwell.model.simcompany.SimCompany">
  		select 
  			a.fullName,a.shortName,a.adminType,DATE_FORMAT(a.createTime,'%Y-%m-%d') as createTime_s,DATE_FORMAT(a.lastUpdateTime,'%Y-%m-%d')as lastUpdateTime_s,a.parentId,a.flag,a.id,a.version,
  			b.username,b.realname,b.id as userid
  		from sim_company a
  		left join `user` b on a.id = b.simcompanyId	
  		where a.id = #{id}
  </select>
  
  <sql id="qw">
  	<where>
  		<if test="userid!=null">
  			and c.id = #{userid}
  		</if>
  		<if test="fullName!=null">
  			and a.fullName like CONCAT('%',#{fullName},'%')
  		</if>
  		<if test="parentId!=null">
  			and a.parentId = #{parentId}
  		</if>
  		<if test="shortName!=null">
  			and a.shortName like CONCAT('%',#{shortName},'%')
  		</if>
  	</where>
  </sql>
  
  <update id="updSimCompanyLock" parameterType="com.amwell.model.simcompany.SimCompany">
  		update sim_company 
  		<trim prefix="set" suffixOverrides=",">
  			<if test="fullName!=null">
  				fullName = #{fullName},
  			</if>
  			<if test="shortName!=null">
  				shortName = #{shortName},
  			</if>
  			
  			<if test="adminType!=null">
  				adminType = #{adminType},
  			</if>
  			<if test="lastUpdateTime!=null">
  				lastUpdateTime = #{lastUpdateTime},
  			</if>
  			<if test="parentId!=null">
  				parentId = #{parentId},
  			</if>
  			<if test="flag!=null">
  				flag = #{flag},
  			</if>
  			<if test="version!=null">
  				version=version+1,
  			</if>
  		</trim>
  		where id = #{id} and version=#{version}
  </update>
  
  <select id="queryTreeRootNodeById" parameterType="int" resultType="SimCompanyTreeNode">
  		select a.id,a.fullName,a.shortName,a.parentId from sim_company a where a.id=#{value}
  </select>
  
  <select id="queryTreeChildNodesByParentId" parameterType="int" resultType="SimCompanyTreeNode">
  		select a.id,a.fullName,a.shortName,a.parentId from sim_company a where a.parentId=#{value}
  </select>
  
    <select id="queryStatTreeRootNodeById" resultType="SimCompanyStatTreeNode">
  		select a.id,a.fullName,a.shortName,a.parentId from sim_company a where a.id=#{value}
  </select>
  
  <select id="queryStatTreeChildNodesByParentId" resultType="SimCompanyStatTreeNode">
  		select a.id,a.fullName,a.shortName,a.parentId from sim_company a where a.parentId=#{value}
  </select>
  
  <select id="queryNodeStatData" resultType="SimCompanyStatTreeNode">
  		SELECT 
  			sum(( CASE a.cardState WHEN '00' THEN 1 ELSE 0 END )) AS countEnable, 
  			sum(( CASE a.cardState WHEN '01' THEN 1 ELSE 0 END )) AS countUnknown, 
  			sum(( CASE a.cardState WHEN '02' THEN 1 ELSE 0 END )) AS countDisable, 
  			sum(( CASE a.cardState WHEN '03' THEN 1 ELSE 0 END )) AS countCancel, 
  			sum(( CASE a.cardState WHEN '07' THEN 1 ELSE 0 END )) AS countSilence, 
  			sum( CASE WHEN #{flow} &lt;= a.usedFlow/a.totalFlow AND a.usedFlow/a.totalFlow &lt;= 1 THEN 1 ELSE 0 END ) AS countWarn, 
  			SUM( CASE WHEN a.usedFlow / a.totalFlow &gt; 1 THEN 1 ELSE 0 END ) AS countExceed 
  		FROM sim_company b LEFT JOIN sim_base_info a ON a.companyId = b.id WHERE FIND_IN_SET( b.id, queryCompanyChildren (#{id}))
  </select>
  
  <select id="queryTreeById" parameterType="int" resultType="SimCompany">
  		SELECT a.id,a.fullName,a.shortName.a.parentId FROM sim_company a where FIND_IN_SET(id,queryCompanyChildren(#{value}))
  </select>
  
</mapper>