#web服务器监听端口
server.port=51000

#添加http头信息，告诉tomcat已被其他服务代理
#server.address=sim.zuchezaixian.net
#server.tomcat.remote_ip_header=X-Forwarded-Host
#server.use-forward-headers=true

#日志配置
debug=true
logging.file=sim.log
logging.level.tk.mybatis=ERROR
logging.level.com.amwell=ERROR
logging.level.org.springframework=ERROR

#mysql数据库连接池配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://120.76.190.155:3306/amwell_sim
spring.datasource.username=test
spring.datasource.password=123456
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=100
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒 
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=true
spring.datasource.testOnReturn=true
# 打开PSCache，并且指定每个连接上PSCache的大小 
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=100
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙 
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true


spring.thymeleaf.cache=false
spring.thymeleaf.mode=LEGACYHTML5

#mybatis配置
mybatis.type-aliases-package=com.amwell.model
#mybatis.mapper-locations=classpath:mapper/**Mapper.xml
mybatis.mapperLocations[0]=classpath*:mapper/*.xml
mybatis.mapperLocations[1]=classpath*:mapper/**/*.xml
mapper.mappers=com.amwell.util.MyMapper
mapper.not-empty=false
mapper.identity=MYSQL
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count\=countSql

#kafka配置

#设置请求kafka服务器的客户端Id，以便服务器端进行日志分析
spring.kafka.clientId=sim
# 指定kafka broker地址，多个以逗号分隔
spring.kafka.bootstrap-servers=192.168.59.130:9092,192.168.59.131:9092,192.168.59.132:9092
# 指定默认消费者group id
spring.kafka.consumer.group-id=myGroup
# 指定默认topic id
spring.kafka.template.default-topic= my-replicated-topic
# 指定listener 容器中的线程数，用于提高并发量
spring.kafka.listener.concurrency= 3
# 每次批量发送消息的数量
spring.kafka.producer.batch-size= 1000


#redis
#Redis数据库索引（默认为0）
spring.redis.database=0
#Redis服务器地址
spring.redis.host= 120.76.190.155
#Redis服务器连接端口
spring.redis.port= 16379
#Redis服务器连接密码（默认为空）
spring.redis.password=yczw20170214
#连接池中的最大空闲连接
spring.redis.pool.max-idle=5
#连接池中的最小空闲连接
spring.redis.pool.min-idle=0
#连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=50
#连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接超时时间（毫秒）
spring.redis.timeout=60000
# redis数据库名
spring.redis.clientname=sim

#

amwell.flow=0.8
amwell.messageFlow=8
amwell.messageTotal=10
